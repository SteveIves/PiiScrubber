;;*****************************************************************************
;;
;; Title:       RpsTag.dbl
;;
;; Type:        Class
;;
;; Description: Represents a single tag definition for a Repository structure
;;
;; Date:        19th October 2007
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import CodeGen.RepositoryAPI

namespace CodeGen.RepositoryAPI

    public class RpsTag

        ;;Tag attribute data
        protected mtg_info  ,tg_info
        protected mTagName  ,String

        ;; Constructor
        public method RpsTag
            required in StructureName, String
            required in TagName, String
            endparams
        proc
            RpsUtils.DbgLog("RpsTag(StructureName,TagName) constructor")
            Repository.CheckIsOpen()
            LoadTag(StructureName,TagName)
        endmethod

        ;; LoadTag method
        private method LoadTag, void
            required in StructureName, String
            required in TagName, String
            endparams
        proc
            ;;Save the tag name
            mTagName = TagName.ToUpper()
            begin
                data ms_info, s_info
                ;;Set the current structure?
                dd_struct(Repository.RpsControl,DDS_INFO,StructureName,^a(ms_info))
                if (Repository.RpsControl.error)
                    throw new RpsTagException("Failed to set current repository structure to "+StructureName)
                ;;Load tag information
                dd_tag(Repository.RpsControl,DDTG_INFO,mTagName,^a(mtg_info))
                if (Repository.RpsControl.error)
                    throw new RpsTagException("Failed to load structure "+StructureName+" tag "+TagName+".")
            end
        endmethod

        ;;---------------------------------------------------------------------
        ;;Public properties to expose tag data to the outside world

        ;; Tag name
        public property Name, String
            method get
            proc
                mreturn mTagName
            endmethod
        endproperty

        ;; Sequence number
        public property SequenceNumber, int
            method get
            proc
                mreturn mtg_info.tgi_seqnm
            endmethod
        endproperty

        ;; Tag field comparison connector (enum RpsTagComparison)
		;;   None, 0		(The first tag doesn't have a connector)
		;;   CompareAnd, 1
        ;;   CompareOr, 2
        public property ComparisonConnector, RpsTagComparison
            method get
			proc
				if (mtg_info.tgi_seqnm==1) then
					mreturn RpsTagComparison.None
				else
	                mreturn (RpsTagComparison)integer(mtg_info.tgi_tagcon)
            endmethod
        endproperty

        ;; Field name
        public property Field, String
            method get
            proc
                mreturn atrim(mtg_info.tgi_tagfld)
            endmethod
        endproperty

        ;; Tag field comparison operator (enum RpsTagOperator)
        ;;   OpEQ, 1
        ;;   OpNE, 2
        ;;   OpLE, 3
        ;;   OpLT, 4
        ;;   OpGE, 5
        ;;   OpGT, 6
        public property ComparisonOperator, RpsTagOperator
            method get
            proc
                mreturn (RpsTagOperator)integer(mtg_info.tgi_tagcmp)
            endmethod
        endproperty

        ;; Tag field comparison value
        public property ComparisonValue, String
            method get
            proc
                mreturn atrim(mtg_info.tgi_tagval)
            endmethod
        endproperty

    endclass

endnamespace
