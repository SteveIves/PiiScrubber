;;*****************************************************************************
;;
;; Title:       Enum.dbl
;;
;; Type:        Class
;;
;; Description: Represents a single repository enumeration definition
;;
;; Date:        2nd November 2009
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import CodeGen.RepositoryAPI

namespace CodeGen.RepositoryAPI

    public class RpsEnum

        ;;Enumeration attribute data
        protected me_info               ,e_info
        protected mName                 ,String     ;;Name
        protected mDescription          ,String     ;;Description
        protected mLongDescription      ,String     ;;Long description
        protected mMembers              ,@RpsEnumMemberCollection

        ;;Constructor, load enum by name, load all members
        public method RpsEnum
            required in EnumName, String
            endparams
        proc
            RpsUtils.DbgLog("RpsEnum(EnumName) constructor")
            Repository.CheckIsOpen()
            LoadEnum(EnumName)
        endmethod

        ;;Destructor
        method ~RpsEnum
        proc
            clear mMembers
        endmethod

        ;;Load the details of an enum
        private method LoadEnum, void
            required in EnumName, String
            endparams
        proc
            ;;Save enum name
            mName = atrim(EnumName.ToUpper())

            ;;Load enum information
            dd_enum(Repository.RpsControl,DDE_INFO,mName,^a(me_info))
            if (Repository.RpsControl.error)
                throw new RpsEnumException("Failed to get information for repository enumeration "+mName)

            ;;Load the enums text-based attributes

            ;;Description
            if (me_info.ei_desc) then
            begin
                data tmpDescription, a40
                xcall dd_enum(Repository.RpsControl,DDE_TEXT,me_info.ei_desc,tmpDescription)
                if (Repository.RpsControl.error) then
                    throw new RpsEnumException("Failed to get description for repository enumeration "+mName)
                else
                    mDescription = atrim(tmpDescription)
            end
            else
                mDescription = ""

            ;;Long description
            if (me_info.ei_ldesc) then
            begin
                data tmpLongDescription, a1800
                dd_enum(Repository.RpsControl,DDE_TEXT,me_info.ei_ldesc,tmpLongDescription)
                if (Repository.RpsControl.error) then
                    throw new RpsEnumException("Failed to get long description for repository enumeration "+mName)
                else
                    mLongDescription = tmpLongDescription
            end
            else
                mLongDescription = ""

        endmethod

        ;;---------------------------------------------------------------------
        ;;Public properties to expose the structures attributes

        ;;Members collection
        public property Members, @RpsEnumMemberCollection
            method get
            proc
                ;;Load the members collection the first time it is referenced
                if (mMembers==^null)
                    mMembers = new RpsEnumMemberCollection(mName)
                mreturn mMembers
            endmethod
        endproperty

        ;;Enumeration name
        public property Name, String
            method get
            proc
                mreturn mName
            endmethod
        endproperty

        ;;Description
        public property Description, String
            method get
            proc
                mreturn mDescription
            endmethod
        endproperty

        ;;Long description
        public property LongDescription, String
            method get
            proc
                mreturn mLongDescription
            endmethod
        endproperty

    endclass

endnamespace

